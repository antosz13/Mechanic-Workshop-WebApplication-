@page "/job/list"
@using MechanicApp.Shared
@using MechanicApp.UI.Services
@inject IJobService JobService

<h3>Jobs List</h3>

@if(Jobs is null)
{
    <p>Loading..</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Job ID</th>
            <th>Number Plate</th>
            <th>Year Of Production</th>
            <th>Status</th>
            <th>Category</th>
            <th>Description</th>
            <th>Seriousness</th>
            <th>Status</th>
            <th>Details</th>
            <th>Workhour Estimation</th>
        </tr>
        </thead>
        <tbody>

        @foreach (var job in Jobs)
        {
            <tr>
                <td>@job.JobId</td>
                <td>@job.NumberPlate</td>
                <td>@job.YearOfProduction</td>
                <td>@job.Status</td>
                <td>@job.Category</td>
                <td>@job.Description</td>
                <td>@job.Seriousness</td>
                <td>@job.Status</td>
                <td><a href="/job/@job.JobId" class="btn btn-primary">Modify</a></td>
                <td>@job.workHourEstimater()</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {

    private IEnumerable<Job>? Jobs { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Jobs = await JobService.GetAllJobAsync();
    }
}